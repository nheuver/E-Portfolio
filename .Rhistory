# Loop through each band/layer in the SpatRaster and compute the average
for (i in 1:nlayers(spatraster)) {
band_averages[i] <- cellStats(spatraster[[i]], stat = "mean")
}
# Add the band averages to the list with a name indicating the raster and band number
averages_list[[raster_name]] <- band_averages
}
# Convert the list into a data frame
averages_df <- do.call(rbind, averages_list)
# Rename columns to reflect the raster names and band indexes (e.g., rastername_1, rastername_2, etc.)
colnames(averages_df) <- paste(rep(names(spatraster_list), each = nlayers(spatraster_list[[1]])),
rep(1:nlayers(spatraster_list[[1]]), length(spatraster_list)), sep = "_")
return(averages_df)
}
# Get the average values for each band across the SpatRasters
averages_df <- get_average_band_values(spatraster_list)
library(terra)
flist_fen <- list.files("/Users/nathanheuver/Library/CloudStorage/OneDrive-UBC/Desktop/School/FCOR_599/Writing/Results/Expected results/20 fen tiffs",
pattern = "tiff$",
full.names = TRUE)
open_spatraster_list <- function(file_paths) {
# Initialize an empty list to store the SpatRaster objects
spatraster_list <- list()
# Loop through each file path and open it as a SpatRaster
for (file_path in file_paths) {
# Check if the file exists
if (file.exists(file_path)) {
# Read the file as a SpatRaster and add to the list
spatraster_list[[file_path]] <- rast(file_path)
} else {
warning(paste("File not found:", file_path))
}
}
# Return the list of SpatRaster objects
return(spatraster_list)
}
spatraster_list <- open_spatraster_list(flist_fen)
# Function to compute average values for each band across all SpatRasters
get_average_band_values <- function(spatraster_list) {
# Initialize an empty list to store the averages for each raster
averages_list <- list()
# Loop through each SpatRaster in the list
for (raster_name in names(spatraster_list)) {
spatraster <- spatraster_list[[raster_name]]
# Initialize a vector to store the average values for each band
band_averages <- numeric(nlyr(spatraster))
# Loop through each band/layer in the SpatRaster and compute the average
for (i in 1:nlyr(spatraster)) {
band_averages[i] <- cellStats(spatraster[[i]], stat = "mean")
}
# Add the band averages to the list with a name indicating the raster and band number
averages_list[[raster_name]] <- band_averages
}
# Convert the list into a data frame
averages_df <- do.call(rbind, averages_list)
# Rename columns to reflect the raster names and band indexes (e.g., rastername_1, rastername_2, etc.)
colnames(averages_df) <- paste(rep(names(spatraster_list), each = nlayers(spatraster_list[[1]])),
rep(1:nlayers(spatraster_list[[1]]), length(spatraster_list)), sep = "_")
return(averages_df)
}
# Get the average values for each band across the SpatRasters
averages_df <- get_average_band_values(spatraster_list)
library(terra)
flist_fen <- list.files("/Users/nathanheuver/Library/CloudStorage/OneDrive-UBC/Desktop/School/FCOR_599/Writing/Results/Expected results/20 fen tiffs",
pattern = "tiff$",
full.names = TRUE)
open_spatraster_list <- function(file_paths) {
# Initialize an empty list to store the SpatRaster objects
spatraster_list <- list()
# Loop through each file path and open it as a SpatRaster
for (file_path in file_paths) {
# Check if the file exists
if (file.exists(file_path)) {
# Read the file as a SpatRaster and add to the list
spatraster_list[[file_path]] <- rast(file_path)
} else {
warning(paste("File not found:", file_path))
}
}
# Return the list of SpatRaster objects
return(spatraster_list)
}
spatraster_list <- open_spatraster_list(flist_fen)
# Function to compute average values for each band across all SpatRasters
get_average_band_values <- function(spatraster_list) {
# Initialize an empty list to store the averages for each raster
averages_list <- list()
# Loop through each SpatRaster in the list
for (raster_name in names(spatraster_list)) {
spatraster <- spatraster_list[[raster_name]]
# Initialize a vector to store the average values for each band
band_averages <- numeric(nlyr(spatraster))
# Loop through each band/layer in the SpatRaster and compute the average
for (i in 1:nlyr(spatraster)) {
band_averages[i] <- global(spatraster[[i]], stat = "mean")
}
# Add the band averages to the list with a name indicating the raster and band number
averages_list[[raster_name]] <- band_averages
}
# Convert the list into a data frame
averages_df <- do.call(rbind, averages_list)
# Rename columns to reflect the raster names and band indexes (e.g., rastername_1, rastername_2, etc.)
colnames(averages_df) <- paste(rep(names(spatraster_list), each = nlayers(spatraster_list[[1]])),
rep(1:nlayers(spatraster_list[[1]]), length(spatraster_list)), sep = "_")
return(averages_df)
}
# Get the average values for each band across the SpatRasters
averages_df <- get_average_band_values(spatraster_list)
library(terra)
flist_fen <- list.files("/Users/nathanheuver/Library/CloudStorage/OneDrive-UBC/Desktop/School/FCOR_599/Writing/Results/Expected results/20 fen tiffs",
pattern = "tiff$",
full.names = TRUE)
open_spatraster_list <- function(file_paths) {
# Initialize an empty list to store the SpatRaster objects
spatraster_list <- list()
# Loop through each file path and open it as a SpatRaster
for (file_path in file_paths) {
# Check if the file exists
if (file.exists(file_path)) {
# Read the file as a SpatRaster and add to the list
spatraster_list[[file_path]] <- rast(file_path)
} else {
warning(paste("File not found:", file_path))
}
}
# Return the list of SpatRaster objects
return(spatraster_list)
}
spatraster_list <- open_spatraster_list(flist_fen)
# Function to compute average values for each band across all SpatRasters
get_average_band_values <- function(spatraster_list) {
# Initialize an empty list to store the averages for each raster
averages_list <- list()
# Loop through each SpatRaster in the list
for (raster_name in names(spatraster_list)) {
spatraster <- spatraster_list[[raster_name]]
# Initialize a vector to store the average values for each band
band_averages <- numeric(nlyr(spatraster))
# Loop through each band/layer in the SpatRaster and compute the average
for (i in 1:nlyr(spatraster)) {
band_averages[i] <- global(spatraster[[i]], stat = "mean")
}
# Add the band averages to the list with a name indicating the raster and band number
averages_list[[raster_name]] <- band_averages
}
# Convert the list into a data frame
averages_df <- do.call(rbind, averages_list)
# Rename columns to reflect the raster names and band indexes (e.g., rastername_1, rastername_2, etc.)
colnames(averages_df) <- paste(rep(names(spatraster_list), each = nlyr(spatraster_list[[1]])),
rep(1:nlyr(spatraster_list[[1]]), length(spatraster_list)), sep = "_")
return(averages_df)
}
# Get the average values for each band across the SpatRasters
averages_df <- get_average_band_values(spatraster_list)
library(terra)
flist_fen <- list.files("/Users/nathanheuver/Library/CloudStorage/OneDrive-UBC/Desktop/School/FCOR_599/Writing/Results/Expected results/20 fen tiffs",
pattern = "tiff$",
full.names = TRUE)
open_spatraster_list <- function(file_paths) {
# Initialize an empty list to store the SpatRaster objects
spatraster_list <- list()
# Loop through each file path and open it as a SpatRaster
for (file_path in file_paths) {
# Check if the file exists
if (file.exists(file_path)) {
# Read the file as a SpatRaster and add to the list
spatraster_list[[file_path]] <- rast(file_path)
} else {
warning(paste("File not found:", file_path))
}
}
# Return the list of SpatRaster objects
return(spatraster_list)
}
spatraster_list <- open_spatraster_list(flist_fen)
# Function to compute average values for each band across all SpatRasters
get_average_band_values <- function(spatraster_list) {
# Initialize an empty list to store the averages for each raster
averages_list <- list()
# Loop through each SpatRaster in the list
for (raster_name in names(spatraster_list)) {
spatraster <- spatraster_list[[raster_name]]
# Initialize a vector to store the average values for each band
band_averages <- numeric(nlyr(spatraster))
# Loop through each band/layer in the SpatRaster and compute the average
for (i in 1:nlyr(spatraster)) {
# Use the global function to compute the mean across all cells of a layer
band_averages[i] <- global(spatraster[[i]], fun = "mean", na.rm = TRUE)
}
# Add the band averages to the list with a name indicating the raster and band number
averages_list[[raster_name]] <- band_averages
}
# Determine the number of layers (bands) for each SpatRaster
num_layers <- nlyr(spatraster_list[[1]])
# Convert the list into a data frame
averages_df <- do.call(rbind, averages_list)
# Generate dynamic column names to reflect raster names and band indexes (e.g., rastername_1, rastername_2, etc.)
column_names <- unlist(lapply(names(spatraster_list), function(raster_name) {
paste(raster_name, 1:num_layers, sep = "_")
}))
# Update the column names of the data frame
colnames(averages_df) <- column_names
return(averages_df)
}
# Get the average values for each band across the SpatRasters
averages_df <- get_average_band_values(spatraster_list)
library(terra)
flist_fen <- list.files("/Users/nathanheuver/Library/CloudStorage/OneDrive-UBC/Desktop/School/FCOR_599/Writing/Results/Expected results/20 fen tiffs",
pattern = "tiff$",
full.names = TRUE)
open_spatraster_list <- function(file_paths) {
# Initialize an empty list to store the SpatRaster objects
spatraster_list <- list()
# Loop through each file path and open it as a SpatRaster
for (file_path in file_paths) {
# Check if the file exists
if (file.exists(file_path)) {
# Read the file as a SpatRaster and add to the list
spatraster_list[[file_path]] <- rast(file_path)
} else {
warning(paste("File not found:", file_path))
}
}
# Return the list of SpatRaster objects
return(spatraster_list)
}
spatraster_list <- open_spatraster_list(flist_fen)
# Function to compute average values for each band across all SpatRasters
get_average_band_values <- function(spatraster_list) {
# Initialize an empty list to store the averages for each raster
averages_list <- list()
# Loop through each SpatRaster in the list
for (raster_name in names(spatraster_list)) {
spatraster <- spatraster_list[[raster_name]]
# Initialize a vector to store the average values for each band
band_averages <- numeric(nlyr(spatraster))
# Loop through each band/layer in the SpatRaster and compute the average
for (i in 1:nlyr(spatraster)) {
# Use the global function to compute the mean across all cells of a layer
band_averages[i] <- global(spatraster[[i]], fun = "mean", na.rm = TRUE)
}
# Add the band averages to the list with a name indicating the raster and band number
averages_list[[raster_name]] <- band_averages
}
# Determine the number of layers (bands) for each SpatRaster
num_layers <- nlyr(spatraster_list[[1]])
# Convert the list into a data frame
averages_df <- do.call(rbind, averages_list)
# Generate dynamic column names to reflect raster names and band indexes (e.g., rastername_1, rastername_2, etc.
# Update the column names of the data frame
colnames(averages_df) <- column_names
return(averages_df)
}
# Get the average values for each band across the SpatRasters
averages_df <- get_average_band_values(spatraster_list)
library(terra)
flist_fen <- list.files("/Users/nathanheuver/Library/CloudStorage/OneDrive-UBC/Desktop/School/FCOR_599/Writing/Results/Expected results/20 fen tiffs",
pattern = "tiff$",
full.names = TRUE)
open_spatraster_list <- function(file_paths) {
# Initialize an empty list to store the SpatRaster objects
spatraster_list <- list()
# Loop through each file path and open it as a SpatRaster
for (file_path in file_paths) {
# Check if the file exists
if (file.exists(file_path)) {
# Read the file as a SpatRaster and add to the list
spatraster_list[[file_path]] <- rast(file_path)
} else {
warning(paste("File not found:", file_path))
}
}
# Return the list of SpatRaster objects
return(spatraster_list)
}
spatraster_list <- open_spatraster_list(flist_fen)
# Function to compute average values for each band across all SpatRasters
get_average_band_values <- function(spatraster_list) {
# Initialize an empty list to store the averages for each raster
averages_list <- list()
# Loop through each SpatRaster in the list
for (raster_name in names(spatraster_list)) {
spatraster <- spatraster_list[[raster_name]]
# Initialize a vector to store the average values for each band
band_averages <- numeric(nlyr(spatraster))
# Loop through each band/layer in the SpatRaster and compute the average
for (i in 1:nlyr(spatraster)) {
# Use the global function to compute the mean across all cells of a layer
band_averages[i] <- global(spatraster[[i]], fun = "mean", na.rm = TRUE)
}
# Add the band averages to the list with a name indicating the raster and band number
averages_list[[raster_name]] <- band_averages
}
# Determine the number of layers (bands) for each SpatRaster
num_layers <- nlyr(spatraster_list[[1]])
# Convert the list into a data frame
averages_df <- do.call(rbind, averages_list)
# Generate dynamic column names to reflect raster names and band indexes (e.g., rastername_1, rastername_2, etc.
return(averages_df)
}
# Get the average values for each band across the SpatRasters
averages_df <- get_average_band_values(spatraster_list)
View(averages_df)
summary <- df(averages_df)
summary <- data.frame(averages_df)
View(summary)
library(terra)
flist_fen <- list.files("/Users/nathanheuver/Library/CloudStorage/OneDrive-UBC/Desktop/School/FCOR_599/Writing/Results/Expected results/20 fen tiffs",
pattern = "tiff$",
full.names = TRUE)
open_spatraster_list <- function(file_paths) {
# Initialize an empty list to store the SpatRaster objects
spatraster_list <- list()
# Loop through each file path and open it as a SpatRaster
for (file_path in file_paths) {
# Check if the file exists
if (file.exists(file_path)) {
# Read the file as a SpatRaster and add to the list
spatraster_list[[file_path]] <- rast(file_path)
} else {
warning(paste("File not found:", file_path))
}
}
# Return the list of SpatRaster objects
return(spatraster_list)
}
spatraster_list <- open_spatraster_list(flist_fen)
# Function to compute average values for each band across all SpatRasters
get_average_band_values <- function(spatraster_list) {
# Initialize an empty list to store the averages for each raster
averages_list <- list()
# Loop through each SpatRaster in the list
for (raster_name in names(spatraster_list)) {
spatraster <- spatraster_list[[raster_name]]
# Initialize a vector to store the average values for each band
band_averages <- numeric(nlyr(spatraster))
# Loop through each band/layer in the SpatRaster and compute the average
for (i in 1:nlyr(spatraster)) {
# Use the global function to compute the mean across all cells of a layer
band_averages[i] <- global(spatraster[[i]], fun = "mean", na.rm = TRUE)
}
# Add the band averages to the list with a name indicating the raster and band number
averages_list[[raster_name]] <- band_averages
}
# Determine the number of layers (bands) for each SpatRaster
num_layers <- nlyr(spatraster_list[[1]])
# Convert the list into a data frame
averages_df <- do.call(rbind, averages_list) %>% data.frame()
# Generate dynamic column names to reflect raster names and ba
return(averages_df)
}
# Get the average values for each band across the SpatRasters
averages_df <- get_average_band_values(spatraster_list)
summary <- df(averages_df)
library(terra)
flist_fen <- list.files("/Users/nathanheuver/Library/CloudStorage/OneDrive-UBC/Desktop/School/FCOR_599/Writing/Results/Expected results/20 fen tiffs",
pattern = "tiff$",
full.names = TRUE)
open_spatraster_list <- function(file_paths) {
# Initialize an empty list to store the SpatRaster objects
spatraster_list <- list()
# Loop through each file path and open it as a SpatRaster
for (file_path in file_paths) {
# Check if the file exists
if (file.exists(file_path)) {
# Read the file as a SpatRaster and add to the list
spatraster_list[[file_path]] <- rast(file_path)
} else {
warning(paste("File not found:", file_path))
}
}
# Return the list of SpatRaster objects
return(spatraster_list)
}
spatraster_list <- open_spatraster_list(flist_fen)
# Function to compute average values for each band across all SpatRasters
get_average_band_values <- function(spatraster_list) {
# Initialize an empty list to store the averages for each raster
averages_list <- list()
# Loop through each SpatRaster in the list
for (raster_name in names(spatraster_list)) {
spatraster <- spatraster_list[[raster_name]]
# Initialize a vector to store the average values for each band
band_averages <- numeric(nlyr(spatraster))
# Loop through each band/layer in the SpatRaster and compute the average
for (i in 1:nlyr(spatraster)) {
# Use the global function to compute the mean across all cells of a layer
band_averages[i] <- global(spatraster[[i]], fun = "mean", na.rm = TRUE)
}
# Add the band averages to the list with a name indicating the raster and band number
averages_list[[raster_name]] <- band_averages
}
# Determine the number of layers (bands) for each SpatRaster
num_layers <- nlyr(spatraster_list[[1]])
# Convert the list into a data frame
averages_df <- do.call(rbind, averages_list) %>% data.frame()
# Generate dynamic column names to reflect raster names and ba
return(averages_df)
}
# Get the average values for each band across the SpatRasters
averages_df <- get_average_band_values(spatraster_list)
summary <- data.frame(blue = mean(averages_df$X1)
green = mean(averages_df$X2)
summary <- data.frame(blue = mean(averages_df$X1),
green = mean(averages_df$X2),
red = mean(averages_df$X3),
nir = mean(averages_df$X4))
View(summary)
library(terra)
flist_fen <- list.files("/Users/nathanheuver/Library/CloudStorage/OneDrive-UBC/Desktop/School/FCOR_599/Writing/Results/Expected results/20 fen tiffs",
pattern = "tiff$",
full.names = TRUE)
open_spatraster_list <- function(file_paths) {
# Initialize an empty list to store the SpatRaster objects
spatraster_list <- list()
# Loop through each file path and open it as a SpatRaster
for (file_path in file_paths) {
# Check if the file exists
if (file.exists(file_path)) {
# Read the file as a SpatRaster and add to the list
spatraster_list[[file_path]] <- rast(file_path)
} else {
warning(paste("File not found:", file_path))
}
}
# Return the list of SpatRaster objects
return(spatraster_list)
}
spatraster_list <- open_spatraster_list(flist_fen)
# Function to compute average values for each band across all SpatRasters
get_average_band_values <- function(spatraster_list) {
# Initialize an empty list to store the averages for each raster
averages_list <- list()
# Loop through each SpatRaster in the list
for (raster_name in names(spatraster_list)) {
spatraster <- spatraster_list[[raster_name]]
# Initialize a vector to store the average values for each band
band_averages <- numeric(nlyr(spatraster))
# Loop through each band/layer in the SpatRaster and compute the average
for (i in 1:nlyr(spatraster)) {
# Use the global function to compute the mean across all cells of a layer
band_averages[i] <- global(spatraster[[i]], fun = "mean", na.rm = TRUE)
}
# Add the band averages to the list with a name indicating the raster and band number
averages_list[[raster_name]] <- band_averages
}
# Determine the number of layers (bands) for each SpatRaster
num_layers <- nlyr(spatraster_list[[1]])
# Convert the list into a data frame
averages_df <- do.call(rbind, averages_list) %>% data.frame()
# Generate dynamic column names to reflect raster names and ba
return(averages_df)
}
# Get the average values for each band across the SpatRasters
averages_df <- get_average_band_values(spatraster_list)
View(averages_df)
library(terra)
flist_fen <- list.files("/Users/nathanheuver/Library/CloudStorage/OneDrive-UBC/Desktop/School/FCOR_599/Writing/Results/Expected results/20 fen tiffs",
pattern = "tiff$",
full.names = TRUE)
open_spatraster_list <- function(file_paths) {
# Initialize an empty list to store the SpatRaster objects
spatraster_list <- list()
# Loop through each file path and open it as a SpatRaster
for (file_path in file_paths) {
# Check if the file exists
if (file.exists(file_path)) {
# Read the file as a SpatRaster and add to the list
spatraster_list[[file_path]] <- rast(file_path)
} else {
warning(paste("File not found:", file_path))
}
}
# Return the list of SpatRaster objects
return(spatraster_list)
}
spatraster_list <- open_spatraster_list(flist_fen)
# Function to compute average values for each band across all SpatRasters
get_average_band_values <- function(spatraster_list) {
# Initialize an empty list to store the averages for each raster
averages_list <- list()
# Loop through each SpatRaster in the list
for (raster_name in names(spatraster_list)) {
spatraster <- spatraster_list[[raster_name]]
# Initialize a vector to store the average values for each band
band_averages <- numeric(nlyr(spatraster))
# Loop through each band/layer in the SpatRaster and compute the average
for (i in 1:nlyr(spatraster)) {
# Use the global function to compute the mean across all cells of a layer
band_averages[i] <- global(spatraster[[i]], fun = "mean", na.rm = TRUE)
}
# Add the band averages to the list with a name indicating the raster and band number
averages_list[[raster_name]] <- band_averages
}
# Determine the number of layers (bands) for each SpatRaster
num_layers <- nlyr(spatraster_list[[1]])
# Convert the list into a data frame
averages_df <- do.call(rbind, averages_list) %>% data.frame()
as.list(averages_df$X1)
as.list(averages_df$X2)
as.list(averages_df$X3)
as.list(averages_df$X4)
return(averages_df)
}
# Get the average values for each band across the SpatRasters
averages_df <- get_average_band_values(spatraster_list)
summary <- data.frame(blue = mean(averages_df$X1),
green = mean(averages_df$X2),
red = mean(averages_df$X3),
nir = mean(averages_df$X4))
qt(0.975, 9, lower.tail=TRUE)
pt(-31.6, 9, lower.tail = TRUE)*2
